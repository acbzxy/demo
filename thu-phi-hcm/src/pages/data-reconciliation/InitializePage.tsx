import React, { useState } from 'react'
import Card from '../../components/ui/Card'
import Button from '../../components/ui/Button'
import Input from '../../components/ui/Input'

const InitializePage: React.FC = () => {
  const [formData, setFormData] = useState({
    reconciliationName: '',
    fromDate: '',
    toDate: '',
    description: '',
    dataSource: 'system'
  })

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-green-50 p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8 animate-fade-in-up">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-12 h-12 bg-gradient-to-r from-green-500 to-green-600 rounded-xl flex items-center justify-center text-white text-2xl">
                üöÄ
              </div>
              <div>
                <h1 className="text-3xl font-bold text-gray-800">Kh·ªüi T·∫°o ƒê·ªëi So√°t</h1>
                <p className="text-gray-600">T·∫°o m·ªõi m·ªôt ƒë·ª£t ƒë·ªëi so√°t d·ªØ li·ªáu</p>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Form */}
          <Card className="animate-fade-in-up">
            <Card.Header>
              <h2 className="text-xl font-semibold text-gray-800">Th√¥ng Tin ƒê·ª£t ƒê·ªëi So√°t</h2>
            </Card.Header>
            <Card.Body>
              <form className="space-y-4">
                <Input
                  label="T√™n ƒë·ª£t ƒë·ªëi so√°t"
                  name="reconciliationName"
                  value={formData.reconciliationName}
                  onChange={handleInputChange}
                  placeholder="Nh·∫≠p t√™n ƒë·ª£t ƒë·ªëi so√°t..."
                  required
                />
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <Input
                    label="T·ª´ ng√†y"
                    name="fromDate"
                    type="date"
                    value={formData.fromDate}
                    onChange={handleInputChange}
                    required
                  />
                  
                  <Input
                    label="ƒê·∫øn ng√†y"
                    name="toDate"
                    type="date"
                    value={formData.toDate}
                    onChange={handleInputChange}
                    required
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-semibold text-gray-700 mb-2">
                    Ngu·ªìn d·ªØ li·ªáu
                  </label>
                  <select
                    name="dataSource"
                    value={formData.dataSource}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 bg-gray-50 border-2 border-transparent rounded-xl hover:bg-gray-100 focus:bg-white focus:border-green-500 focus:ring-4 focus:ring-green-500/10 transition-all duration-300 focus:outline-none"
                  >
                    <option value="system">H·ªá th·ªëng n·ªôi b·ªô</option>
                    <option value="customs">D·ªØ li·ªáu H·∫£i Quan</option>
                    <option value="bank">D·ªØ li·ªáu ng√¢n h√†ng</option>
                    <option value="manual">Nh·∫≠p th·ªß c√¥ng</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-semibold text-gray-700 mb-2">
                    M√¥ t·∫£
                  </label>
                  <textarea
                    name="description"
                    value={formData.description}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 bg-gray-50 border-2 border-transparent rounded-xl hover:bg-gray-100 focus:bg-white focus:border-green-500 focus:ring-4 focus:ring-green-500/10 transition-all duration-300 focus:outline-none"
                    rows={4}
                    placeholder="Nh·∫≠p m√¥ t·∫£ chi ti·∫øt v·ªÅ ƒë·ª£t ƒë·ªëi so√°t..."
                  />
                </div>
                
                <div className="flex space-x-4 pt-4">
                  <Button variant="success" fullWidth>
                    Kh·ªüi T·∫°o
                  </Button>
                  <Button variant="outline" fullWidth>
                    H·ªßy B·ªè
                  </Button>
                </div>
              </form>
            </Card.Body>
          </Card>

          {/* Configuration */}
          <Card className="animate-fade-in-up" style={{ animationDelay: '0.2s' }}>
            <Card.Header>
              <h2 className="text-xl font-semibold text-gray-800">C·∫•u H√¨nh ƒê·ªëi So√°t</h2>
            </Card.Header>
            <Card.Body>
              <div className="space-y-6">
                <div>
                  <h3 className="font-semibold text-gray-800 mb-3">Lo·∫°i D·ªØ Li·ªáu ƒê·ªëi So√°t</h3>
                  <div className="space-y-2">
                    {[
                      { id: 'receipts', label: 'Bi√™n lai thu ph√≠', checked: true },
                      { id: 'payments', label: 'D·ªØ li·ªáu thanh to√°n', checked: true },
                      { id: 'declarations', label: 'T·ªù khai ph√≠', checked: false },
                      { id: 'enterprises', label: 'Th√¥ng tin doanh nghi·ªáp', checked: false }
                    ].map((item) => (
                      <label key={item.id} className="flex items-center space-x-3">
                        <input
                          type="checkbox"
                          defaultChecked={item.checked}
                          className="w-4 h-4 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500"
                        />
                        <span className="text-gray-700">{item.label}</span>
                      </label>
                    ))}
                  </div>
                </div>
                
                <div>
                  <h3 className="font-semibold text-gray-800 mb-3">T√πy Ch·ªçn N√¢ng Cao</h3>
                  <div className="space-y-2">
                    {[
                      { id: 'autoMatch', label: 'T·ª± ƒë·ªông gh√©p n·ªëi d·ªØ li·ªáu', checked: true },
                      { id: 'emailNotify', label: 'G·ª≠i email th√¥ng b√°o', checked: false },
                      { id: 'autoReport', label: 'T·ª± ƒë·ªông t·∫°o b√°o c√°o', checked: false }
                    ].map((item) => (
                      <label key={item.id} className="flex items-center space-x-3">
                        <input
                          type="checkbox"
                          defaultChecked={item.checked}
                          className="w-4 h-4 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500"
                        />
                        <span className="text-gray-700">{item.label}</span>
                      </label>
                    ))}
                  </div>
                </div>
              </div>
            </Card.Body>
          </Card>
        </div>

        {/* Recent Reconciliations */}
        <Card className="mt-6 animate-fade-in-up" style={{ animationDelay: '0.4s' }}>
          <Card.Header>
            <h2 className="text-xl font-semibold text-gray-800">ƒê·ª£t ƒê·ªëi So√°t G·∫ßn ƒê√¢y</h2>
          </Card.Header>
          <Card.Body className="p-0">
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-6 py-4 text-left text-sm font-semibold text-gray-700">T√™n ƒë·ª£t</th>
                    <th className="px-6 py-4 text-left text-sm font-semibold text-gray-700">Th·ªùi gian</th>
                    <th className="px-6 py-4 text-left text-sm font-semibold text-gray-700">Tr·∫°ng th√°i</th>
                    <th className="px-6 py-4 text-left text-sm font-semibold text-gray-700">K·∫øt qu·∫£</th>
                  </tr>
                </thead>
                <tbody className="divide-y divide-gray-200">
                  {[
                    { name: 'ƒê·ªëi so√°t th√°ng 12/2024', period: '01/12 - 31/12/2024', status: 'Ho√†n th√†nh', result: '98.5% kh·ªõp' },
                    { name: 'ƒê·ªëi so√°t th√°ng 11/2024', period: '01/11 - 30/11/2024', status: 'Ho√†n th√†nh', result: '99.2% kh·ªõp' },
                    { name: 'ƒê·ªëi so√°t th√°ng 10/2024', period: '01/10 - 31/10/2024', status: 'Ho√†n th√†nh', result: '97.8% kh·ªõp' }
                  ].map((item, index) => (
                    <tr key={index} className="hover:bg-gray-50 transition-colors duration-200">
                      <td className="px-6 py-4 text-sm font-medium text-gray-800">{item.name}</td>
                      <td className="px-6 py-4 text-sm text-gray-700">{item.period}</td>
                      <td className="px-6 py-4">
                        <span className="inline-flex px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800">
                          {item.status}
                        </span>
                      </td>
                      <td className="px-6 py-4 text-sm text-gray-700">{item.result}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </Card.Body>
        </Card>
      </div>
    </div>
  )
}

export default InitializePage
